- alias: Licht an 45min vor Sonnenuntergang
  trigger:
  - event: sunset
    offset: -01:00:00
    platform: sun
  condition: []
  action:
    - service: light.turn_on
      entity_id: light.living_room
      data:
        brightness: 200
        color_name: sandybrown
#    - service: switch.turn_on
#      entity_id: switch.strom_tannenbaum

- alias: Licht aus 90min nach Sonnenaufgang
  trigger:
  - event: sunrise
    offset: 01:00:00
    platform: sun
  condition: []
  action:
  - service: light.turn_off
    entity_id: group.licht_philips
#  - service: switch.turn_off
#    entity_id: switch.strom_tannenbaum

#- alias: Baum aus um 10
#  trigger:
#    platform: time
#    at: '22:00:00'
#  condition: []
#  action:
#  - service: switch.turn_off
#    entity_id: switch.strom_tannenbaum

- alias: Unter der Woche, morgens Licht an
  trigger:
    platform: time
    at: '06:00:00'
  condition:
    condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
    - service: light.turn_on
      entity_id: group.licht_philips 
      data:
        brightness: 255
        color_name: lightcyan
#    - service: switch.turn_on
#      entity_id: switch.strom_tannenbaum

#- alias: Push Nachricht wenn Hochbeet über 25 Grad
#  trigger:
#    platform: numeric_state
#    entity_id: sensor.hochbeet_temperature_max_last_12h
#    above: 25
#  action:
#    - service: notify.pushover_notification
#      data:
#        title: "Hochbeet sehr warm!"
#        message: |
#          Balkon:
#          - {{ states.sensor.netatmo_wetterarsch_outdoor_temperature.state }} °C
#          Hochbeet:
#          - {{ states.sensor.hochbeet_temperature.state }} °C ({{ states.sensor.hochbeet_temperature_max_last_12h.state }} °C max/12h)
#          - {{ states.sensor.hochbeet_moisture.state }} % Feuchtigkeit ({{ states.sensor.hochbeet_moisture_min_last_12h.state }} % min/12h)
#          - {{ states.sensor.hochbeet_light_intensity.state }} lx
#        data:
#          sound: pianobar
#          priority: 0
#  condition:
#    condition: template
#    value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.push_nachricht_wenn_hochbeet_uber_25_grad.attributes.last_triggered | default(0)) | int > 14400)}}'
#
#- alias: Push Nachricht an Patrick wenn zuhause und Beet zu trocken war
#  trigger:
#    - platform: numeric_state
#      entity_id: sensor.hochbeet_moisture_min_last_12h
#      below: 17
#    - platform: state
#      entity_id: person.patrick_tracker
#      to: 'home'
#  condition:
#    condition: and
#    conditions:
#      - condition: state
#        entity_id: 'person.patrick_tracker'
#        state: 'home'
#      - condition: numeric_state
#        entity_id: 'sensor.hochbeet_moisture_min_last_12h'
#        below: 17
#      - condition: template
#        value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.push_nachricht_an_patrick_wenn_zuhause_und_beet_zu_trocken_war.attributes.last_triggered | default(0)) | int > 14400 )}}'
#  action:
#    - service: notify.pushover_notification
#      data:
#        title: "Hochbeet giessen"
#        message: |
#          Balkon:
#          - {{ states.sensor.netatmo_wetterarsch_outdoor_temperature.state }} °C
#          Hochbeet:
#          - {{ states.sensor.hochbeet_temperature.state }} °C ({{ states.sensor.hochbeet_temperature_max_last_12h.state }} °C max/12h)
#          - {{ states.sensor.hochbeet_moisture.state }} % Feuchtigkeit ({{ states.sensor.hochbeet_moisture_min_last_12h.state }} % min/12h)
#          - {{ states.sensor.hochbeet_light_intensity.state }} lx
#        data:
#          sound: pianobar
#          priority: 0

#- alias: 'Set theme at startup'
#  trigger:
#    platform: homeassistant
#    event: start
#  action:
#    service: frontend.set_theme
#    data:
#      name: darkgreen
#
#- alias: automatisch Blumen giessen
#  trigger:
#  - event: sunrise
#    offset: -02:00:00
#    platform: sun
#  condition:
#    condition: or
#    conditions:
#      - condition: numeric_state
#        entity_id: 'sensor.hochbeet2_moisture'
#        below: 20
#      - condition: numeric_state
#        entity_id: 'sensor.karotten_moisture'
#        below: 20
#      - condition: numeric_state
#        entity_id: 'sensor.jolokia_chili_moisture'
#        below: 20
#  action:
#  - service: notify.pushover_notification
#    data:
#      title: "automatisch Blumen gegossen"
#      message: |
#        Feuchtigkeit Pflanzen draussen (vor dem Giessen):
#        Hochbeet Kräuter:  {{ states.sensor.hochbeet2_moisture.state }} %
#        Hochbeet Karotten: {{ states.sensor.karotten_moisture.state }} %
#        Chilis:            {{ states.sensor.jolokia_chili_moisture.state }} %
#        Lavendel:          {{ states.sensor.lavendel_moisture.state }} %
#        Lilien:            {{ states.sensor.lilien_moisture.state }} %
#      data:
#        sound: pianobar
#        priority: 0
#  - service: switch.turn_off
#    entity_id: switch.strom_tannenbaum
#  - delay:
#      minutes: 1
#  - service: switch.turn_on
#    entity_id: switch.strom_tannenbaum
#  - delay:
#      minutes: 2
#  - service: switch.turn_off
#    entity_id: switch.strom_tannenbaum

- alias: Sonos Bad Play/Pause Toggle
  trigger:
    platform: webhook
    webhook_id: sonos_bathroom_toggle
  action:
    - service: media_player.media_play_pause
      entity_id: media_player.bathroom

- alias: Sonos Bad Pause
  trigger:
    platform: webhook
    webhook_id: sonos_bathroom_pause
  action:
    - service: media_player.media_pause
      entity_id: media_player.bathroom
